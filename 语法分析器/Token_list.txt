[ line: 1, type: type, value: int]
[ line: 1, type: identifier, value: main]
[ line: 1, type: delimiter, value: (]
[ line: 1, type: delimiter, value: )]
[ line: 1, type: delimiter, value: {]
[ line: 2, type: type, value: int]
[ line: 2, type: identifier, value: c]
[ line: 2, type: binary_operation, value: =]
[ line: 2, type: number, value: 4]
[ line: 2, type: delimiter, value: ;]
[ line: 3, type: identifier, value: c]
[ line: 3, type: binary_operation, value: =]
[ line: 3, type: identifier, value: a]
[ line: 3, type: unary_operation, value: ++]
[ line: 3, type: delimiter, value: ;]
[ line: 4, type: type, value: complex]
[ line: 4, type: identifier, value: b]
[ line: 4, type: binary_operation, value: =]
[ line: 4, type: number, value: @10+2i]
[ line: 4, type: delimiter, value: ;]
[ line: 5, type: type, value: double]
[ line: 5, type: identifier, value: d]
[ line: 5, type: binary_operation, value: =]
[ line: 5, type: number, value: -20E+4]
[ line: 5, type: delimiter, value: ;]
[ line: 6, type: type, value: double]
[ line: 6, type: identifier, value: bcx]
[ line: 6, type: binary_operation, value: =]
[ line: 6, type: number, value: 0.014]
[ line: 6, type: delimiter, value: ;]
[ line: 7, type: type, value: int]
[ line: 7, type: identifier, value: a]
[ line: 7, type: binary_operation, value: =]
[ line: 7, type: identifier, value: c]
[ line: 7, type: unary_operation, value: ++]
[ line: 7, type: delimiter, value: ;]
[ line: 8, type: keyword_for, value: for]
[ line: 8, type: delimiter, value: (]
[ line: 8, type: type, value: int]
[ line: 8, type: identifier, value: i]
[ line: 8, type: binary_operation, value: =]
[ line: 8, type: number, value: 0]
[ line: 8, type: delimiter, value: ;]
[ line: 8, type: identifier, value: i]
[ line: 8, type: binary_op_compare, value: <=]
[ line: 8, type: number, value: 4]
[ line: 8, type: delimiter, value: ;]
[ line: 8, type: identifier, value: i]
[ line: 8, type: unary_operation, value: ++]
[ line: 8, type: delimiter, value: )]
[ line: 8, type: delimiter, value: {]
[ line: 9, type: keyword_while, value: while]
[ line: 9, type: delimiter, value: (]
[ line: 9, type: identifier, value: for_]
[ line: 9, type: delimiter, value: )]
[ line: 9, type: delimiter, value: {]
[ line: 10, type: type, value: int]
[ line: 10, type: identifier, value: forwhile]
[ line: 10, type: binary_operation, value: =]
[ line: 10, type: number, value: 1]
[ line: 10, type: delimiter, value: ;]
[ line: 11, type: type, value: string]
[ line: 11, type: identifier, value: _ac]
[ line: 11, type: binary_operation, value: =]
[ line: 11, type: string, value: "saf sadw81sad"]
[ line: 11, type: delimiter, value: ;]
[ line: 12, type: delimiter, value: }]
[ line: 13, type: keyword_if, value: if]
[ line: 13, type: delimiter, value: (]
[ line: 13, type: identifier, value: i]
[ line: 13, type: binary_op_compare, value: !=]
[ line: 13, type: number, value: 0]
[ line: 13, type: delimiter, value: )]
[ line: 13, type: delimiter, value: {]
[ line: 14, type: keyword_return, value: return]
[ line: 14, type: number, value: 0]
[ line: 14, type: delimiter, value: ;]
[ line: 15, type: delimiter, value: }]
[ line: 16, type: keyword_else, value: else]
[ line: 16, type: delimiter, value: {]
[ line: 17, type: identifier, value: z]
[ line: 17, type: binary_operation, value: +=]
[ line: 17, type: number, value: 1]
[ line: 17, type: delimiter, value: ;]
[ line: 18, type: delimiter, value: }]
[ line: 19, type: keyword_if, value: if]
[ line: 19, type: delimiter, value: (]
[ line: 19, type: identifier, value: c]
[ line: 19, type: delimiter, value: )]
[ line: 19, type: delimiter, value: {]
[ line: 20, type: identifier, value: c]
[ line: 20, type: unary_operation, value: ++]
[ line: 20, type: delimiter, value: ;]
[ line: 21, type: delimiter, value: }]
[ line: 22, type: keyword_else, value: else]
[ line: 22, type: identifier, value: c]
[ line: 22, type: unary_operation, value: --]
[ line: 22, type: delimiter, value: ;]
[ line: 23, type: keyword_if, value: if]
[ line: 23, type: delimiter, value: (]
[ line: 23, type: identifier, value: i]
[ line: 23, type: binary_op_compare, value: ==]
[ line: 23, type: number, value: 1]
[ line: 23, type: delimiter, value: )]
[ line: 23, type: delimiter, value: {]
[ line: 24, type: keyword_return, value: return]
[ line: 24, type: number, value: 0]
[ line: 24, type: delimiter, value: ;]
[ line: 25, type: delimiter, value: }]
[ line: 26, type: delimiter, value: }]
[ line: 27, type: type, value: int]
[ line: 27, type: identifier, value: ab]
[ line: 27, type: binary_operation, value: =]
[ line: 27, type: number, value: -5]
[ line: 27, type: delimiter, value: ;]
[ line: 28, type: type, value: int]
[ line: 28, type: identifier, value: vvv]
[ line: 28, type: binary_operation, value: =]
[ line: 28, type: number, value: 4]
[ line: 28, type: delimiter, value: ;]
[ line: 29, type: delimiter, value: }]